variables:
  dockerImagesPush: true
  azureSubscription: 'Naos 22463ad3-c6d2-4e7e-911d-c50474250fa0' # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/resources?view=azure-devops#troubleshooting-authorization-for-a-yaml-pipeline
  azureContainerRegistry: '{"loginServer":"naossample.azurecr.io", "id" : "/subscriptions/22463ad3-c6d2-4e7e-911d-c50474250fa0/resourceGroups/naos/providers/Microsoft.ContainerRegistry/registries/naossample"}'
  vmImage: 'ubuntu-latest' # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml#use-a-microsoft-hosted-agent

pool:
  vmImage: 'ubuntu-latest'

trigger:
- master
- develop
- refs/tags/v*

resources:
- repo: self
  fetchDepth: 1

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImage)
    steps:
    - task: GitVersion@5 # alternative https://github.com/adamralph/minver
      displayName: Apply git version

    - task: DockerCompose@0 # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/docker-compose?view=azure-devops
      displayName: Docker build images
      inputs:
        action: 'Build services'
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: $(azureSubscription)
        azureContainerRegistry: $(azureContainerRegistry)
        dockerComposeFile: '$(System.DefaultWorkingDirectory)/docker-compose.yml'
        additionalDockerComposeFiles: '$(System.DefaultWorkingDirectory)/docker-compose.override.yml'
        includeLatestTag: true
        additionalImageTags: $(GitVersion.NuGetVersionV2)

    - task: DockerCompose@0 # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/docker-compose?view=azure-devops
      displayName: Docker push images
      enabled: true
      condition: |
        and
        (
           eq(variables['dockerImagesPush'], 'true'),
           eq(variables['Build.SourceBranch'], 'refs/heads/master')
        )
      inputs:
        action: 'Push services'
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: $(azureSubscription)
        azureContainerRegistry: $(azureContainerRegistry)
        dockerComposeFile: '$(System.DefaultWorkingDirectory)/docker-compose.yml'
        additionalDockerComposeFiles: '$(System.DefaultWorkingDirectory)/docker-compose.override.yml'
        includeLatestTag: true
        additionalImageTags: $(GitVersion.NuGetVersionV2)